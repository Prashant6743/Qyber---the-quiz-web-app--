{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/prashantkumar/Desktop/capstone%20project%20new/ai-quiz-maker-main/src/components/ui/button.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst buttonVariants = cva(\n  \"inline-flex items-center justify-center gap-2 whitespace-nowrap rounded-md text-sm font-medium ring-offset-background transition-colors focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:pointer-events-none disabled:opacity-50 [&_svg]:pointer-events-none [&_svg]:size-4 [&_svg]:shrink-0\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-primary text-primary-foreground hover:bg-primary/90\",\n        destructive:\n          \"bg-destructive text-destructive-foreground hover:bg-destructive/90\",\n        outline:\n          \"border border-input bg-background hover:bg-accent hover:text-accent-foreground\",\n        secondary:\n          \"bg-secondary text-secondary-foreground hover:bg-secondary/80\",\n        ghost: \"hover:bg-accent hover:text-accent-foreground\",\n        link: \"text-primary underline-offset-4 hover:underline\",\n      },\n      size: {\n        default: \"h-10 px-4 py-2\",\n        sm: \"h-9 rounded-md px-3\",\n        lg: \"h-11 rounded-md px-8\",\n        icon: \"h-10 w-10\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n      size: \"default\",\n    },\n  }\n)\n\nexport interface ButtonProps\n  extends React.ButtonHTMLAttributes<HTMLButtonElement>,\n    VariantProps<typeof buttonVariants> {\n  asChild?: boolean\n}\n\nconst Button = React.forwardRef<HTMLButtonElement, ButtonProps>(\n  ({ className, variant, size, asChild = false, ...props }, ref) => {\n    const Comp = asChild ? Slot : \"button\"\n    return (\n      <Comp\n        className={cn(buttonVariants({ variant, size, className }))}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nButton.displayName = \"Button\"\n\nexport { Button, buttonVariants }\n"],"names":[],"mappings":";;;;;AAAA;AACA;AACA;AAEA;;;;;;AAEA,MAAM,iBAAiB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACvB,4VACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;YACF,SACE;YACF,WACE;YACF,OAAO;YACP,MAAM;QACR;QACA,MAAM;YACJ,SAAS;YACT,IAAI;YACJ,IAAI;YACJ,MAAM;QACR;IACF;IACA,iBAAiB;QACf,SAAS;QACT,MAAM;IACR;AACF;AASF,MAAM,uBAAS,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC5B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,KAAK,EAAE,GAAG,OAAO,EAAE;IACxD,MAAM,OAAO,UAAU,gKAAA,CAAA,OAAI,GAAG;IAC9B,qBACE,8OAAC;QACC,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,eAAe;YAAE;YAAS;YAAM;QAAU;QACxD,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,OAAO,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 67, "column": 0}, "map": {"version":3,"sources":["file:///Users/prashantkumar/Desktop/capstone%20project%20new/ai-quiz-maker-main/src/components/ui/card.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Card = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"rounded-lg border bg-card text-card-foreground shadow-sm\",\n      className\n    )}\n    {...props}\n  />\n))\nCard.displayName = \"Card\"\n\nconst CardHeader = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex flex-col space-y-1.5 p-6\", className)}\n    {...props}\n  />\n))\nCardHeader.displayName = \"CardHeader\"\n\nconst CardTitle = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\n      \"text-2xl font-semibold leading-none tracking-tight\",\n      className\n    )}\n    {...props}\n  />\n))\nCardTitle.displayName = \"CardTitle\"\n\nconst CardDescription = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm text-muted-foreground\", className)}\n    {...props}\n  />\n))\nCardDescription.displayName = \"CardDescription\"\n\nconst CardContent = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div ref={ref} className={cn(\"p-6 pt-0\", className)} {...props} />\n))\nCardContent.displayName = \"CardContent\"\n\nconst CardFooter = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"flex items-center p-6 pt-0\", className)}\n    {...props}\n  />\n))\nCardFooter.displayName = \"CardFooter\"\n\nexport { Card, CardHeader, CardFooter, CardTitle, CardDescription, CardContent }\n"],"names":[],"mappings":";;;;;;;;;AAAA;AAEA;;;;AAEA,MAAM,qBAAO,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG1B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4DACA;QAED,GAAG,KAAK;;;;;;AAGb,KAAK,WAAW,GAAG;AAEnB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,0BAAY,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG/B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,sDACA;QAED,GAAG,KAAK;;;;;;AAGb,UAAU,WAAW,GAAG;AAExB,MAAM,gCAAkB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGrC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,gBAAgB,WAAW,GAAG;AAE9B,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGjC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QAAI,KAAK;QAAK,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,YAAY;QAAa,GAAG,KAAK;;;;;;AAEhE,YAAY,WAAW,GAAG;AAE1B,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,8BAA8B;QAC3C,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 148, "column": 0}, "map": {"version":3,"sources":["file:///Users/prashantkumar/Desktop/capstone%20project%20new/ai-quiz-maker-main/src/components/ui/input.tsx"],"sourcesContent":["import * as React from \"react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Input = React.forwardRef<HTMLInputElement, React.ComponentProps<\"input\">>(\n  ({ className, type, ...props }, ref) => {\n    return (\n      <input\n        type={type}\n        className={cn(\n          \"flex h-10 w-full rounded-md border border-input bg-background px-3 py-2 text-base ring-offset-background file:border-0 file:bg-transparent file:text-sm file:font-medium file:text-foreground placeholder:text-muted-foreground focus-visible:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 md:text-sm\",\n          className\n        )}\n        ref={ref}\n        {...props}\n      />\n    )\n  }\n)\nInput.displayName = \"Input\"\n\nexport { Input }\n"],"names":[],"mappings":";;;;AAAA;AAEA;;;;AAEA,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAC3B,CAAC,EAAE,SAAS,EAAE,IAAI,EAAE,GAAG,OAAO,EAAE;IAC9B,qBACE,8OAAC;QACC,MAAM;QACN,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,kYACA;QAEF,KAAK;QACJ,GAAG,KAAK;;;;;;AAGf;AAEF,MAAM,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 177, "column": 0}, "map": {"version":3,"sources":["file:///Users/prashantkumar/Desktop/capstone%20project%20new/ai-quiz-maker-main/src/components/ui/select.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as SelectPrimitive from \"@radix-ui/react-select\"\nimport { Check, ChevronDown, ChevronUp } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst Select = SelectPrimitive.Root\n\nconst SelectGroup = SelectPrimitive.Group\n\nconst SelectValue = SelectPrimitive.Value\n\nconst SelectTrigger = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Trigger>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Trigger>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Trigger\n    ref={ref}\n    className={cn(\n      \"flex h-10 w-full items-center justify-between rounded-md border border-input bg-background px-3 py-2 text-sm ring-offset-background placeholder:text-muted-foreground focus:outline-none focus:ring-2 focus:ring-ring focus:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50 [&>span]:line-clamp-1\",\n      className\n    )}\n    {...props}\n  >\n    {children}\n    <SelectPrimitive.Icon asChild>\n      <ChevronDown className=\"h-4 w-4 opacity-50\" />\n    </SelectPrimitive.Icon>\n  </SelectPrimitive.Trigger>\n))\nSelectTrigger.displayName = SelectPrimitive.Trigger.displayName\n\nconst SelectScrollUpButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollUpButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollUpButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollUpButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronUp className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollUpButton>\n))\nSelectScrollUpButton.displayName = SelectPrimitive.ScrollUpButton.displayName\n\nconst SelectScrollDownButton = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.ScrollDownButton>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.ScrollDownButton>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.ScrollDownButton\n    ref={ref}\n    className={cn(\n      \"flex cursor-default items-center justify-center py-1\",\n      className\n    )}\n    {...props}\n  >\n    <ChevronDown className=\"h-4 w-4\" />\n  </SelectPrimitive.ScrollDownButton>\n))\nSelectScrollDownButton.displayName =\n  SelectPrimitive.ScrollDownButton.displayName\n\nconst SelectContent = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Content>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Content>\n>(({ className, children, position = \"popper\", ...props }, ref) => (\n  <SelectPrimitive.Portal>\n    <SelectPrimitive.Content\n      ref={ref}\n      className={cn(\n        \"relative z-50 max-h-96 min-w-[8rem] overflow-hidden rounded-md border bg-popover text-popover-foreground shadow-md data-[state=open]:animate-in data-[state=closed]:animate-out data-[state=closed]:fade-out-0 data-[state=open]:fade-in-0 data-[state=closed]:zoom-out-95 data-[state=open]:zoom-in-95 data-[side=bottom]:slide-in-from-top-2 data-[side=left]:slide-in-from-right-2 data-[side=right]:slide-in-from-left-2 data-[side=top]:slide-in-from-bottom-2\",\n        position === \"popper\" &&\n          \"data-[side=bottom]:translate-y-1 data-[side=left]:-translate-x-1 data-[side=right]:translate-x-1 data-[side=top]:-translate-y-1\",\n        className\n      )}\n      position={position}\n      {...props}\n    >\n      <SelectScrollUpButton />\n      <SelectPrimitive.Viewport\n        className={cn(\n          \"p-1\",\n          position === \"popper\" &&\n            \"h-[var(--radix-select-trigger-height)] w-full min-w-[var(--radix-select-trigger-width)]\"\n        )}\n      >\n        {children}\n      </SelectPrimitive.Viewport>\n      <SelectScrollDownButton />\n    </SelectPrimitive.Content>\n  </SelectPrimitive.Portal>\n))\nSelectContent.displayName = SelectPrimitive.Content.displayName\n\nconst SelectLabel = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Label>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Label>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Label\n    ref={ref}\n    className={cn(\"py-1.5 pl-8 pr-2 text-sm font-semibold\", className)}\n    {...props}\n  />\n))\nSelectLabel.displayName = SelectPrimitive.Label.displayName\n\nconst SelectItem = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Item>\n>(({ className, children, ...props }, ref) => (\n  <SelectPrimitive.Item\n    ref={ref}\n    className={cn(\n      \"relative flex w-full cursor-default select-none items-center rounded-sm py-1.5 pl-8 pr-2 text-sm outline-none focus:bg-accent focus:text-accent-foreground data-[disabled]:pointer-events-none data-[disabled]:opacity-50\",\n      className\n    )}\n    {...props}\n  >\n    <span className=\"absolute left-2 flex h-3.5 w-3.5 items-center justify-center\">\n      <SelectPrimitive.ItemIndicator>\n        <Check className=\"h-4 w-4\" />\n      </SelectPrimitive.ItemIndicator>\n    </span>\n\n    <SelectPrimitive.ItemText>{children}</SelectPrimitive.ItemText>\n  </SelectPrimitive.Item>\n))\nSelectItem.displayName = SelectPrimitive.Item.displayName\n\nconst SelectSeparator = React.forwardRef<\n  React.ElementRef<typeof SelectPrimitive.Separator>,\n  React.ComponentPropsWithoutRef<typeof SelectPrimitive.Separator>\n>(({ className, ...props }, ref) => (\n  <SelectPrimitive.Separator\n    ref={ref}\n    className={cn(\"-mx-1 my-1 h-px bg-muted\", className)}\n    {...props}\n  />\n))\nSelectSeparator.displayName = SelectPrimitive.Separator.displayName\n\nexport {\n  Select,\n  SelectGroup,\n  SelectValue,\n  SelectTrigger,\n  SelectContent,\n  SelectLabel,\n  SelectItem,\n  SelectSeparator,\n  SelectScrollUpButton,\n  SelectScrollDownButton,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 369, "column": 0}, "map": {"version":3,"sources":["file:///Users/prashantkumar/Desktop/capstone%20project%20new/ai-quiz-maker-main/src/components/ui/label.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst labelVariants = cva(\n  \"text-sm font-medium leading-none peer-disabled:cursor-not-allowed peer-disabled:opacity-70\"\n)\n\nconst Label = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root> &\n    VariantProps<typeof labelVariants>\n>(({ className, ...props }, ref) => (\n  <LabelPrimitive.Root\n    ref={ref}\n    className={cn(labelVariants(), className)}\n    {...props}\n  />\n))\nLabel.displayName = LabelPrimitive.Root.displayName\n\nexport { Label }\n"],"names":[],"mappings":";;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAI3B,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC,iKAAA,CAAA,OAAmB;QAClB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iBAAiB;QAC9B,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG,iKAAA,CAAA,OAAmB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 401, "column": 0}, "map": {"version":3,"sources":["file:///Users/prashantkumar/Desktop/capstone%20project%20new/ai-quiz-maker-main/src/components/ui/form.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as LabelPrimitive from \"@radix-ui/react-label\"\nimport { Slot } from \"@radix-ui/react-slot\"\nimport {\n  Controller,\n  FormProvider,\n  useFormContext,\n  type ControllerProps,\n  type FieldPath,\n  type FieldValues,\n} from \"react-hook-form\"\n\nimport { cn } from \"@/lib/utils\"\nimport { Label } from \"@/components/ui/label\"\n\nconst Form = FormProvider\n\ntype FormFieldContextValue<\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n> = {\n  name: TName\n}\n\nconst FormFieldContext = React.createContext<FormFieldContextValue>(\n  {} as FormFieldContextValue\n)\n\nconst FormField = <\n  TFieldValues extends FieldValues = FieldValues,\n  TName extends FieldPath<TFieldValues> = FieldPath<TFieldValues>\n>({\n  ...props\n}: ControllerProps<TFieldValues, TName>) => {\n  return (\n    <FormFieldContext.Provider value={{ name: props.name }}>\n      <Controller {...props} />\n    </FormFieldContext.Provider>\n  )\n}\n\nconst useFormField = () => {\n  const fieldContext = React.useContext(FormFieldContext)\n  const itemContext = React.useContext(FormItemContext)\n  const { getFieldState, formState } = useFormContext()\n\n  const fieldState = getFieldState(fieldContext.name, formState)\n\n  if (!fieldContext) {\n    throw new Error(\"useFormField should be used within <FormField>\")\n  }\n\n  const { id } = itemContext\n\n  return {\n    id,\n    name: fieldContext.name,\n    formItemId: `${id}-form-item`,\n    formDescriptionId: `${id}-form-item-description`,\n    formMessageId: `${id}-form-item-message`,\n    ...fieldState,\n  }\n}\n\ntype FormItemContextValue = {\n  id: string\n}\n\nconst FormItemContext = React.createContext<FormItemContextValue>(\n  {} as FormItemContextValue\n)\n\nconst FormItem = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement>\n>(({ className, ...props }, ref) => {\n  const id = React.useId()\n\n  return (\n    <FormItemContext.Provider value={{ id }}>\n      <div ref={ref} className={cn(\"space-y-2\", className)} {...props} />\n    </FormItemContext.Provider>\n  )\n})\nFormItem.displayName = \"FormItem\"\n\nconst FormLabel = React.forwardRef<\n  React.ElementRef<typeof LabelPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof LabelPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  const { error, formItemId } = useFormField()\n\n  return (\n    <Label\n      ref={ref}\n      className={cn(error && \"text-destructive\", className)}\n      htmlFor={formItemId}\n      {...props}\n    />\n  )\n})\nFormLabel.displayName = \"FormLabel\"\n\nconst FormControl = React.forwardRef<\n  React.ElementRef<typeof Slot>,\n  React.ComponentPropsWithoutRef<typeof Slot>\n>(({ ...props }, ref) => {\n  const { error, formItemId, formDescriptionId, formMessageId } = useFormField()\n\n  return (\n    <Slot\n      ref={ref}\n      id={formItemId}\n      aria-describedby={\n        !error\n          ? `${formDescriptionId}`\n          : `${formDescriptionId} ${formMessageId}`\n      }\n      aria-invalid={!!error}\n      {...props}\n    />\n  )\n})\nFormControl.displayName = \"FormControl\"\n\nconst FormDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => {\n  const { formDescriptionId } = useFormField()\n\n  return (\n    <p\n      ref={ref}\n      id={formDescriptionId}\n      className={cn(\"text-sm text-muted-foreground\", className)}\n      {...props}\n    />\n  )\n})\nFormDescription.displayName = \"FormDescription\"\n\nconst FormMessage = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, children, ...props }, ref) => {\n  const { error, formMessageId } = useFormField()\n  const body = error ? String(error?.message ?? \"\") : children\n\n  if (!body) {\n    return null\n  }\n\n  return (\n    <p\n      ref={ref}\n      id={formMessageId}\n      className={cn(\"text-sm font-medium text-destructive\", className)}\n      {...props}\n    >\n      {body}\n    </p>\n  )\n})\nFormMessage.displayName = \"FormMessage\"\n\nexport {\n  useFormField,\n  Form,\n  FormItem,\n  FormLabel,\n  FormControl,\n  FormDescription,\n  FormMessage,\n  FormField,\n}\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 554, "column": 0}, "map": {"version":3,"sources":["file:///Users/prashantkumar/Desktop/capstone%20project%20new/ai-quiz-maker-main/src/components/ui/radio-group.tsx"],"sourcesContent":["\"use client\"\n\nimport * as React from \"react\"\nimport * as RadioGroupPrimitive from \"@radix-ui/react-radio-group\"\nimport { Circle } from \"lucide-react\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst RadioGroup = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Root>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Root>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Root\n      className={cn(\"grid gap-2\", className)}\n      {...props}\n      ref={ref}\n    />\n  )\n})\nRadioGroup.displayName = RadioGroupPrimitive.Root.displayName\n\nconst RadioGroupItem = React.forwardRef<\n  React.ElementRef<typeof RadioGroupPrimitive.Item>,\n  React.ComponentPropsWithoutRef<typeof RadioGroupPrimitive.Item>\n>(({ className, ...props }, ref) => {\n  return (\n    <RadioGroupPrimitive.Item\n      ref={ref}\n      className={cn(\n        \"aspect-square h-4 w-4 rounded-full border border-primary text-primary ring-offset-background focus:outline-none focus-visible:ring-2 focus-visible:ring-ring focus-visible:ring-offset-2 disabled:cursor-not-allowed disabled:opacity-50\",\n        className\n      )}\n      {...props}\n    >\n      <RadioGroupPrimitive.Indicator className=\"flex items-center justify-center\">\n        <Circle className=\"h-2.5 w-2.5 fill-current text-current\" />\n      </RadioGroupPrimitive.Indicator>\n    </RadioGroupPrimitive.Item>\n  )\n})\nRadioGroupItem.displayName = RadioGroupPrimitive.Item.displayName\n\nexport { RadioGroup, RadioGroupItem }\n"],"names":[],"mappings":";;;;;AAEA;AACA;AACA;AAEA;AANA;;;;;;AAQA,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;QAC3B,GAAG,KAAK;QACT,KAAK;;;;;;AAGX;AACA,WAAW,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW;AAE7D,MAAM,+BAAiB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGpC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE;IAC1B,qBACE,8OAAC,0KAAA,CAAA,OAAwB;QACvB,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EACV,4OACA;QAED,GAAG,KAAK;kBAET,cAAA,8OAAC,0KAAA,CAAA,YAA6B;YAAC,WAAU;sBACvC,cAAA,8OAAC,sMAAA,CAAA,SAAM;gBAAC,WAAU;;;;;;;;;;;;;;;;AAI1B;AACA,eAAe,WAAW,GAAG,0KAAA,CAAA,OAAwB,CAAC,WAAW","debugId":null}},
    {"offset": {"line": 614, "column": 0}, "map": {"version":3,"sources":["file:///Users/prashantkumar/Desktop/capstone%20project%20new/ai-quiz-maker-main/src/components/ui/alert.tsx"],"sourcesContent":["import * as React from \"react\"\nimport { cva, type VariantProps } from \"class-variance-authority\"\n\nimport { cn } from \"@/lib/utils\"\n\nconst alertVariants = cva(\n  \"relative w-full rounded-lg border p-4 [&>svg~*]:pl-7 [&>svg+div]:translate-y-[-3px] [&>svg]:absolute [&>svg]:left-4 [&>svg]:top-4 [&>svg]:text-foreground\",\n  {\n    variants: {\n      variant: {\n        default: \"bg-background text-foreground\",\n        destructive:\n          \"border-destructive/50 text-destructive dark:border-destructive [&>svg]:text-destructive\",\n      },\n    },\n    defaultVariants: {\n      variant: \"default\",\n    },\n  }\n)\n\nconst Alert = React.forwardRef<\n  HTMLDivElement,\n  React.HTMLAttributes<HTMLDivElement> & VariantProps<typeof alertVariants>\n>(({ className, variant, ...props }, ref) => (\n  <div\n    ref={ref}\n    role=\"alert\"\n    className={cn(alertVariants({ variant }), className)}\n    {...props}\n  />\n))\nAlert.displayName = \"Alert\"\n\nconst AlertTitle = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLHeadingElement>\n>(({ className, ...props }, ref) => (\n  <h5\n    ref={ref}\n    className={cn(\"mb-1 font-medium leading-none tracking-tight\", className)}\n    {...props}\n  />\n))\nAlertTitle.displayName = \"AlertTitle\"\n\nconst AlertDescription = React.forwardRef<\n  HTMLParagraphElement,\n  React.HTMLAttributes<HTMLParagraphElement>\n>(({ className, ...props }, ref) => (\n  <div\n    ref={ref}\n    className={cn(\"text-sm [&_p]:leading-relaxed\", className)}\n    {...props}\n  />\n))\nAlertDescription.displayName = \"AlertDescription\"\n\nexport { Alert, AlertTitle, AlertDescription }\n"],"names":[],"mappings":";;;;;;AAAA;AACA;AAEA;;;;;AAEA,MAAM,gBAAgB,CAAA,GAAA,gKAAA,CAAA,MAAG,AAAD,EACtB,6JACA;IACE,UAAU;QACR,SAAS;YACP,SAAS;YACT,aACE;QACJ;IACF;IACA,iBAAiB;QACf,SAAS;IACX;AACF;AAGF,MAAM,sBAAQ,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAG3B,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,GAAG,OAAO,EAAE,oBACnC,8OAAC;QACC,KAAK;QACL,MAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,cAAc;YAAE;QAAQ,IAAI;QACzC,GAAG,KAAK;;;;;;AAGb,MAAM,WAAW,GAAG;AAEpB,MAAM,2BAAa,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGhC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,gDAAgD;QAC7D,GAAG,KAAK;;;;;;AAGb,WAAW,WAAW,GAAG;AAEzB,MAAM,iCAAmB,CAAA,GAAA,qMAAA,CAAA,aAAgB,AAAD,EAGtC,CAAC,EAAE,SAAS,EAAE,GAAG,OAAO,EAAE,oBAC1B,8OAAC;QACC,KAAK;QACL,WAAW,CAAA,GAAA,mHAAA,CAAA,KAAE,AAAD,EAAE,iCAAiC;QAC9C,GAAG,KAAK;;;;;;AAGb,iBAAiB,WAAW,GAAG","debugId":null}},
    {"offset": {"line": 678, "column": 0}, "map": {"version":3,"sources":["file:///Users/prashantkumar/Desktop/capstone%20project%20new/ai-quiz-maker-main/src/app/page.tsx"],"sourcesContent":["\n\n'use client';\n\nimport { type ReactNode, useState, useEffect } from 'react';\nimport { useForm, useFieldArray, Controller } from 'react-hook-form';\nimport { zodResolver } from '@hookform/resolvers/zod';\nimport { z } from 'zod';\nimport {\n  BookOpen,\n  ListOrdered,\n  SignalLow,\n  SignalMedium,\n  SignalHigh,\n  Loader2,\n  Sparkles,\n  HelpCircle,\n  CheckCircle,\n  XCircle,\n  Lightbulb,\n  Type,\n  ChevronDown,\n  ChevronUp,\n} from 'lucide-react';\n\nimport { Button } from '@/components/ui/button';\nimport {\n  Card,\n  CardContent,\n  CardDescription,\n  CardFooter,\n  CardHeader,\n  CardTitle,\n} from '@/components/ui/card';\nimport { Input } from '@/components/ui/input';\nimport {\n  Select,\n  SelectContent,\n  SelectItem,\n  SelectTrigger,\n  SelectValue,\n} from '@/components/ui/select';\nimport {\n  Form,\n  FormControl,\n  FormField,\n  FormItem,\n  FormLabel,\n  FormMessage,\n} from '@/components/ui/form';\nimport { Label } from '@/components/ui/label'; // Import Label component\nimport { RadioGroup, RadioGroupItem } from \"@/components/ui/radio-group\"\nimport { Separator } from '@/components/ui/separator';\nimport { generateQuiz, type GenerateQuizOutput, type QuizQuestion } from '@/ai/flows/generate-quiz';\nimport { Alert, AlertDescription, AlertTitle } from '@/components/ui/alert';\nimport { useToast } from \"@/hooks/use-toast\"\nimport { cn } from '@/lib/utils';\n\n// --- Configuration Form Schema ---\nconst quizConfigSchema = z.object({\n  topic: z.string().min(2, 'Topic must be at least 2 characters.'),\n  numQuestions: z.coerce\n    .number()\n    .int()\n    .min(1, 'Number of questions must be at least 1.')\n    .max(10, 'Number of questions cannot exceed 10.'),\n  difficulty: z.enum(['easy', 'medium', 'hard']),\n  questionType: z.enum(['short-answer', 'multiple-choice', 'fill-in-the-blank', 'mixed']),\n});\ntype QuizConfigFormData = z.infer<typeof quizConfigSchema>;\n\n// --- Quiz Answering Form Schema ---\nconst answerSchema = z.object({\n  questionId: z.string(), // To link answer back to question\n  userAnswer: z.string().trim(), // User's input/selection\n});\ntype AnswerFormData = z.infer<typeof answerSchema>;\n\nconst quizAnswerFormSchema = z.object({\n    answers: z.array(answerSchema),\n});\ntype QuizAnswerFormData = z.infer<typeof quizAnswerFormSchema>;\n\n\n// --- Component State ---\ntype QuizItem = QuizQuestion & { id: string }; // Use unique string ID\n\ntype QuizState = 'configuring' | 'generating' | 'answering' | 'results';\n\nexport default function Home() {\n  const [quizData, setQuizData] = useState<QuizItem[] | null>(null);\n  const [quizState, setQuizState] = useState<QuizState>('configuring');\n  const [error, setError] = useState<string | null>(null);\n  const [score, setScore] = useState<number | null>(null);\n  const [showAnswers, setShowAnswers] = useState<boolean>(false);\n  const [userAnswers, setUserAnswers] = useState<Record<string, string>>({}); // Store user answers { questionId: userAnswer }\n  const { toast } = useToast();\n\n  // --- Forms ---\n  const configForm = useForm<QuizConfigFormData>({\n    resolver: zodResolver(quizConfigSchema),\n    defaultValues: {\n      topic: '',\n      numQuestions: 3,\n      difficulty: 'medium',\n      questionType: 'mixed',\n    },\n  });\n\n  const answerForm = useForm<QuizAnswerFormData>({\n     resolver: zodResolver(quizAnswerFormSchema),\n     defaultValues: {\n       answers: [],\n     },\n  });\n   const { fields, append, remove } = useFieldArray({\n    control: answerForm.control,\n    name: \"answers\",\n    keyName: \"fieldId\", // Use a different key name than 'id'\n  });\n\n   // Sync answer form fields when quizData changes\n   useEffect(() => {\n    if (quizData) {\n      // Clear existing fields\n      remove(); // Remove all fields\n      // Append new fields based on quizData\n      quizData.forEach((q, index) => {\n        append({ questionId: q.id, userAnswer: '' });\n      });\n      setUserAnswers({}); // Reset user answers state\n      setShowAnswers(false); // Hide answers when new quiz loads\n      setScore(null); // Reset score\n    }\n  }, [quizData, append, remove]);\n\n\n  // --- Event Handlers ---\n  async function onConfigSubmit(values: QuizConfigFormData) {\n    setQuizState('generating');\n    setError(null);\n    setQuizData(null);\n    setScore(null);\n    setShowAnswers(false);\n    setUserAnswers({});\n    answerForm.reset({ answers: [] }); // Reset answer form\n\n    console.log('Generating quiz with values:', values);\n\n    try {\n      // Ensure all required fields are present before calling the API\n      const validatedValues = quizConfigSchema.parse(values);\n      \n      // Use the API route instead of direct server action\n      const response = await fetch('/api/generate-quiz', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n        },\n        body: JSON.stringify(validatedValues),\n      });\n      \n      if (!response.ok) {\n        const errorData = await response.json();\n        throw new Error(errorData.error || 'Failed to generate quiz');\n      }\n      \n      const result = await response.json();\n      console.log('API Result:', result);\n      if (result && result.quiz && Array.isArray(result.quiz)) {\n        if(result.quiz.length !== values.numQuestions) {\n            console.warn(`AI returned ${result.quiz.length} questions, but ${values.numQuestions} were requested.`);\n            toast({\n                title: \"Notice\",\n                description: `The AI generated ${result.quiz.length} questions, although ${values.numQuestions} were requested. Showing the generated questions.`,\n                variant: \"default\", // Or a custom variant for warnings\n            });\n        }\n        if(result.quiz.length === 0) {\n             setError('The AI generated an empty quiz. Please try again with different parameters.');\n             setQuizState('configuring');\n             return;\n        }\n\n        // Add unique IDs to quiz items\n        const quizWithIds = result.quiz.map((item, index) => ({\n          ...item,\n          id: `q-${index}-${Date.now()}`, // More robust unique ID\n        }));\n        setQuizData(quizWithIds);\n        setQuizState('answering');\n      } else {\n         setError('Failed to generate quiz. The AI returned an unexpected format.');\n         setQuizState('configuring');\n      }\n    } catch (err) {\n      console.error('Error generating quiz:', err);\n       const errorMessage = err instanceof z.ZodError\n         ? `Form validation error: ${err.errors.map(e => `${e.path.join('.')}: ${e.message}`).join(', ')}`\n         : err instanceof Error\n           ? err.message\n           : 'An unknown error occurred during quiz generation.';\n      setError(errorMessage);\n      setQuizState('configuring');\n       toast({\n          title: \"Generation Failed\",\n          description: errorMessage,\n          variant: \"destructive\",\n        });\n    }\n  }\n\n  function onAnswerSubmit(data: QuizAnswerFormData) {\n    if (!quizData) return;\n     console.log(\"Submitted answers:\", data);\n\n    let correctCount = 0;\n    const submittedAnswers: Record<string, string> = {};\n\n    data.answers.forEach((answerInput) => {\n       submittedAnswers[answerInput.questionId] = answerInput.userAnswer;\n      const question = quizData.find(q => q.id === answerInput.questionId);\n      if (question) {\n          // Case-insensitive comparison for short-answer and fill-in-the-blank\n          const userAnswerProcessed = answerInput.userAnswer.trim();\n          const correctAnswerProcessed = question.answer.trim();\n          if (userAnswerProcessed.toLowerCase() === correctAnswerProcessed.toLowerCase()) {\n              correctCount++;\n          }\n      }\n    });\n\n    setScore(correctCount);\n    setUserAnswers(submittedAnswers); // Store submitted answers for display\n    setShowAnswers(true); // Immediately show answers after submission\n    setQuizState('results');\n     toast({\n        title: \"Quiz Submitted!\",\n        description: `You scored ${correctCount} out of ${quizData.length}.`,\n      });\n  }\n\n  function handleStartNewQuiz() {\n    setQuizState('configuring');\n    setQuizData(null);\n    setError(null);\n    setScore(null);\n    setShowAnswers(false);\n    setUserAnswers({});\n    configForm.reset(); // Reset config form as well\n    answerForm.reset({ answers: [] });\n  }\n\n  // --- Helper Components ---\n const DifficultyIcon = ({ difficulty }: { difficulty: 'easy' | 'medium' | 'hard' }) => {\n    switch (difficulty) {\n      case 'easy': return <SignalLow className=\"inline-block mr-1 h-4 w-4 text-green-500\" aria-label=\"Easy difficulty\"/>;\n      case 'medium': return <SignalMedium className=\"inline-block mr-1 h-4 w-4 text-yellow-500\" aria-label=\"Medium difficulty\"/>;\n      case 'hard': return <SignalHigh className=\"inline-block mr-1 h-4 w-4 text-red-500\" aria-label=\"Hard difficulty\"/>;\n      default: return null;\n    }\n };\n\n  const QuestionTypeIcon = ({ type }: { type: QuizConfigFormData['questionType'] | QuizQuestion['type'] }) => {\n     switch (type) {\n       case 'short-answer': return <Type className=\"inline-block mr-1 h-4 w-4 text-blue-500\" aria-label=\"Short Answer\"/>;\n       case 'multiple-choice': return <ListOrdered className=\"inline-block mr-1 h-4 w-4 text-purple-500\" aria-label=\"Multiple Choice\"/>;\n       case 'fill-in-the-blank': return <Lightbulb className=\"inline-block mr-1 h-4 w-4 text-orange-500\" aria-label=\"Fill in the Blank\"/>; // Example icon\n       case 'mixed': return <Sparkles className=\"inline-block mr-1 h-4 w-4 text-pink-500\" aria-label=\"Mixed Types\"/>;\n       default: return null;\n     }\n  };\n\n\n  const isLoading = quizState === 'generating';\n  const isAnswering = quizState === 'answering';\n  const isResults = quizState === 'results';\n  const isConfiguring = quizState === 'configuring';\n\n  return (\n    <div className=\"flex flex-col items-center min-h-screen bg-gradient-to-b from-background to-secondary/50 p-4 md:p-8\">\n      <header className=\"text-center mb-8 md:mb-12\">\n        <h1 className=\"text-4xl md:text-5xl font-bold text-primary mb-2 flex items-center justify-center gap-2\">\n          <Sparkles className=\"h-8 w-8\" /> Qyber AI quiz  \n        </h1>\n        <p className=\"text-lg text-muted-foreground\">\n          Generate & take custom quizzes instantly!\n        </p>\n      </header>\n\n      <main className=\"w-full max-w-4xl grid grid-cols-1 lg:grid-cols-2 gap-8\">\n        {/* --- Configuration Form Section --- */}\n        <Card className={cn(\"shadow-lg\", !isConfiguring && \"hidden lg:block\")}>\n          <CardHeader>\n            <CardTitle className=\"text-2xl font-semibold text-primary flex items-center\">\n               <HelpCircle className=\"mr-2 h-6 w-6\" /> Create Your Quiz\n            </CardTitle>\n            <CardDescription>\n              Enter the details below to generate your personalized quiz.\n            </CardDescription>\n          </CardHeader>\n          <Form {...configForm}>\n            <form onSubmit={configForm.handleSubmit(onConfigSubmit)}>\n              <CardContent className=\"space-y-6\">\n                <FormField\n                  control={configForm.control}\n                  name=\"topic\"\n                  render={({ field }) => (\n                    <FormItem>\n                      <FormLabel className=\"flex items-center text-foreground\">\n                        <BookOpen className=\"mr-2 h-4 w-4\" /> Topic\n                      </FormLabel>\n                      <FormControl>\n                        <Input placeholder=\"e.g., World Capitals, Photosynthesis\" {...field} aria-required=\"true\" />\n                      </FormControl>\n                      <FormMessage />\n                    </FormItem>\n                  )}\n                />\n                <div className=\"grid grid-cols-2 gap-4\">\n                 <FormField\n                    control={configForm.control}\n                    name=\"numQuestions\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"flex items-center text-foreground\">\n                          <ListOrdered className=\"mr-2 h-4 w-4\" /> Questions\n                        </FormLabel>\n                        <FormControl>\n                           <Input type=\"number\" min=\"1\" max=\"10\" {...field} aria-required=\"true\" aria-describedby=\"numQuestions-description\"/>\n                        </FormControl>\n                         <p id=\"numQuestions-description\" className=\"text-xs text-muted-foreground sr-only\">Number of questions (1-10)</p>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                  <FormField\n                    control={configForm.control}\n                    name=\"difficulty\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"flex items-center text-foreground\">\n                          <DifficultyIcon difficulty={field.value as 'easy' | 'medium' | 'hard'} />\n                          Difficulty\n                        </FormLabel>\n                        <Select onValueChange={field.onChange} defaultValue={field.value} name={field.name} value={field.value}>\n                          <FormControl>\n                            <SelectTrigger aria-required=\"true\">\n                              <SelectValue placeholder=\"Select difficulty\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"easy\">\n                               <SignalLow className=\"inline-block mr-2 h-4 w-4 text-green-500\" /> Easy\n                            </SelectItem>\n                            <SelectItem value=\"medium\">\n                                <SignalMedium className=\"inline-block mr-2 h-4 w-4 text-yellow-500\" /> Medium\n                            </SelectItem>\n                            <SelectItem value=\"hard\">\n                               <SignalHigh className=\"inline-block mr-2 h-4 w-4 text-red-500\" /> Hard\n                            </SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n                </div>\n                 {/* Question Type Selector */}\n                  <FormField\n                    control={configForm.control}\n                    name=\"questionType\"\n                    render={({ field }) => (\n                      <FormItem>\n                        <FormLabel className=\"flex items-center text-foreground\">\n                          <QuestionTypeIcon type={field.value} />\n                           Question Type\n                        </FormLabel>\n                        <Select onValueChange={field.onChange} defaultValue={field.value} name={field.name} value={field.value}>\n                           <FormControl>\n                            <SelectTrigger aria-required=\"true\">\n                              <SelectValue placeholder=\"Select question type\" />\n                            </SelectTrigger>\n                          </FormControl>\n                          <SelectContent>\n                            <SelectItem value=\"mixed\">\n                              <QuestionTypeIcon type=\"mixed\" /> Mixed\n                            </SelectItem>\n                            <SelectItem value=\"short-answer\">\n                              <QuestionTypeIcon type=\"short-answer\" /> Short Answer\n                            </SelectItem>\n                            <SelectItem value=\"multiple-choice\">\n                              <QuestionTypeIcon type=\"multiple-choice\" /> Multiple Choice\n                            </SelectItem>\n                            <SelectItem value=\"fill-in-the-blank\">\n                              <QuestionTypeIcon type=\"fill-in-the-blank\" /> Fill in the Blank\n                            </SelectItem>\n                          </SelectContent>\n                        </Select>\n                        <FormMessage />\n                      </FormItem>\n                    )}\n                  />\n              </CardContent>\n              <CardFooter>\n                <Button type=\"submit\" disabled={isLoading} className=\"w-full\">\n                  {isLoading ? (\n                    <>\n                      <Loader2 className=\"mr-2 h-4 w-4 animate-spin\" /> Generating...\n                    </>\n                  ) : (\n                    <>\n                      <Sparkles className=\"mr-2 h-4 w-4\" /> Generate Quiz\n                    </>\n                  )}\n                </Button>\n              </CardFooter>\n            </form>\n          </Form>\n        </Card>\n\n         {/* --- Quiz Display & Answering Section --- */}\n         <Card className={cn(\"shadow-lg overflow-hidden h-full flex flex-col\", isConfiguring && \"hidden lg:block\")}>\n          <CardHeader>\n             <div className=\"flex justify-between items-start\">\n                <div>\n                  <CardTitle className=\"text-2xl font-semibold text-primary\">\n                    {isResults ? \"Quiz Results\" : \"Generated Quiz\"}\n                  </CardTitle>\n                  <CardDescription>\n                     {isAnswering && `Answer the ${configForm.getValues('difficulty')} questions below on \"${configForm.getValues('topic')}\":`}\n                     {isResults && score !== null && quizData && `You scored ${score} out of ${quizData.length}!`}\n                     {isResults && score === null && quizData && `Review your answers for the quiz on \"${configForm.getValues('topic')}\":`}\n                     {(isLoading || (isConfiguring && !error && !isLoading)) && \"Your generated quiz will appear here.\"}\n                  </CardDescription>\n                </div>\n                 {(isAnswering || isResults) && (\n                    <Button variant=\"outline\" size=\"sm\" onClick={handleStartNewQuiz}>\n                        Start New Quiz\n                    </Button>\n                )}\n            </div>\n          </CardHeader>\n           <CardContent className=\"flex-grow overflow-y-auto px-6 pb-6 space-y-6\">\n             {isLoading && (\n              <div className=\"flex items-center justify-center h-full p-6\">\n                <Loader2 className=\"h-8 w-8 animate-spin text-primary\" />\n                <p className=\"ml-4 text-muted-foreground\">Generating your quiz...</p>\n              </div>\n            )}\n            {error && !isLoading && (\n               <div className=\"p-6\">\n                  <Alert variant=\"destructive\">\n                     <XCircle className=\"h-4 w-4\"/>\n                    <AlertTitle>Error</AlertTitle>\n                    <AlertDescription>{error}</AlertDescription>\n                  </Alert>\n                   <Button onClick={handleStartNewQuiz} className=\"mt-4\">Try Again</Button>\n                </div>\n            )}\n             {!isLoading && !error && !quizData && isConfiguring && (\n              <div className=\"flex flex-col items-center justify-center text-center h-full p-6 text-muted-foreground\">\n                <HelpCircle className=\"h-12 w-12 mb-4 text-primary/50\" />\n                <p>Enter your quiz details and click \"Generate Quiz\" to get started.</p>\n              </div>\n            )}\n\n            {/* Display Quiz Questions & Answers */}\n            {quizData && (isAnswering || isResults) && (\n                 <Form {...answerForm}>\n                     <form onSubmit={answerForm.handleSubmit(onAnswerSubmit)} className=\"space-y-6\">\n                         {fields.map((field, index) => {\n                             const question = quizData.find(q => q.id === field.questionId);\n                             if (!question) return null; // Should not happen if synced correctly\n                             const userAnswer = userAnswers[question.id];\n                             const isCorrect = isResults && userAnswer !== undefined && userAnswer.trim().toLowerCase() === question.answer.trim().toLowerCase();\n\n                             return (\n                                 <Card key={field.id} className={cn(\"p-4\", isResults && (isCorrect ? 'border-green-500 bg-green-50/50' : 'border-red-500 bg-red-50/50'))}>\n                                     <FormLabel className=\"font-semibold flex items-center mb-2\">\n                                         <span className=\"mr-2 text-primary\">{index + 1}.</span>\n                                         <QuestionTypeIcon type={question.type} />\n                                         {question.question.includes('____') && question.type === 'fill-in-the-blank'\n                                            ? (\n                                                <span dangerouslySetInnerHTML={{ __html: question.question.replace(/____/g, '<span class=\"font-bold text-muted-foreground\">[...]</span>') }} />\n                                            )\n                                            : question.question\n                                         }\n\n                                     </FormLabel>\n                                      <FormField\n                                        control={answerForm.control}\n                                        name={`answers.${index}.userAnswer`}\n                                        render={({ field: answerField }) => (\n                                             <FormItem className=\"mt-2 space-y-3\">\n                                                  <FormControl>\n                                                      <>\n                                                        {question.type === 'multiple-choice' && question.options && (\n                                                            <RadioGroup\n                                                                onValueChange={answerField.onChange}\n                                                                defaultValue={answerField.value}\n                                                                className=\"flex flex-col space-y-1\"\n                                                                disabled={isResults} // Disable after submission\n                                                                aria-label={`Options for question ${index + 1}`}\n                                                               >\n                                                                    {question.options.map((option, optionIndex) => (\n                                                                        <FormItem key={`${question.id}-opt-${optionIndex}`} className=\"flex items-center space-x-3 space-y-0\">\n                                                                             <FormControl>\n                                                                                <RadioGroupItem value={option} id={`${question.id}-opt-${optionIndex}`} />\n                                                                             </FormControl>\n                                                                            <Label htmlFor={`${question.id}-opt-${optionIndex}`} className=\"font-normal\">{option}</Label>\n                                                                        </FormItem>\n                                                                    ))}\n                                                                </RadioGroup>\n                                                         )}\n\n                                                         {(question.type === 'short-answer' || question.type === 'fill-in-the-blank') && (\n                                                            <Input\n                                                                {...answerField}\n                                                                placeholder={question.type === 'fill-in-the-blank' ? \"Fill in the blank...\" : \"Your answer...\"}\n                                                                disabled={isResults} // Disable after submission\n                                                                aria-label={`Answer input for question ${index + 1}`}\n                                                             />\n                                                         )}\n                                                      </>\n                                                 </FormControl>\n                                                 <FormMessage /> {/* Show validation errors for the answer field if any */}\n                                             </FormItem>\n                                         )}\n                                     />\n\n                                     {/* Show Correct Answer and User Feedback */}\n                                     {isResults && showAnswers && (\n                                          <div className=\"mt-3 pt-3 border-t border-border/50\">\n                                              {isCorrect ? (\n                                                 <p className=\"text-sm font-medium text-green-700 flex items-center\"><CheckCircle className=\"h-4 w-4 mr-1\" /> Correct!</p>\n                                             ) : (\n                                                <>\n                                                     <p className=\"text-sm font-medium text-red-700 flex items-center\"><XCircle className=\"h-4 w-4 mr-1\"/> Incorrect.</p>\n                                                      <p className=\"text-sm text-muted-foreground mt-1\">Your answer: <span className=\"font-medium\">{userAnswer || <span className=\"italic\">No answer provided</span>}</span></p>\n                                                      <p className=\"text-sm text-foreground mt-1\">Correct answer: <span className=\"font-semibold text-accent\">{question.answer}</span></p>\n                                                 </>\n                                             )}\n                                         </div>\n                                     )}\n                                 </Card>\n                             );\n                         })}\n\n                        {isAnswering && quizData && quizData.length > 0 && (\n                            <Button type=\"submit\" className=\"w-full mt-6\">\n                                Submit Answers\n                            </Button>\n                        )}\n                     </form>\n                 </Form>\n            )}\n           </CardContent>\n           {isResults && score !== null && quizData && quizData.length > 0 && (\n               <CardFooter className=\"border-t p-4 bg-muted/50 flex justify-center\">\n                  <p className=\"text-lg font-semibold\">Final Score: {score} / {quizData.length}</p>\n               </CardFooter>\n            )}\n            {isAnswering && quizData && quizData.length > 0 && (\n               <CardFooter className=\"border-t p-4 bg-muted/50\">\n                  <p className=\"text-sm text-muted-foreground w-full text-center\">Answer all questions and click \"Submit Answers\".</p>\n               </CardFooter>\n            )}\n        </Card>\n      </main>\n       <footer className=\"mt-12 text-center text-sm text-muted-foreground\">\n        powerd by Prashant ✨\n      </footer>\n    </div>\n  );\n}\n"],"names":[],"mappings":"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","debugId":null}}]
}